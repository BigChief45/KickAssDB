package kickassdb;

import java.io.*;
import java_cup.runtime.*;

parser code
{:
	public static void main(String args[]) throws Exception 
        {
		//new parser(new Lexer(new FileInputStream(args[0]))).parse();
                System.out.println("Entro al cup para parsear");
		new parser(new Lexer(System.in)).parse();
	}

	public void syntax_error(Symbol s) 
        {
		//report_error("Error de sintaxis. Linea: " + (s.right + 1) + " Columna: " + s.left + ". Texto: \"" + s.value + "\"", null);
                //Interfaz.outputArea.append("Error de sintaxis. Linea: " + (s.right + 1) + " Columna: " + s.left + ". Texto: \"" + s.value + "\"" + "\n");
	}

	public void unrecovered_syntax_error(Symbol s) 
        {
		System.out.println("Error fatal de sintaxis. Se ha detenido el parseo.");
                //Interfaz.outputArea.append("Error fatal de sintaxis. Se ha detenido el parseo.");
	}
:}

/* Terminals */
terminal CREATE, TABLE, PRIMARY, KEY, INSERT, INTO, VALUES;
terminal String INT, VARCHAR;
terminal String PARLEFT, PARRIGHT, SEMICOLON, COMA;
terminal String ID;
terminal Integer NUM;
terminal STR;

/* No Terminals */
non terminal operation;
non terminal create_table;
non terminal insert_record;
non terminal record_values;
non terminal table_attribute;
non terminal attribute_type;
non terminal coma;
non terminal primary_key;
non terminal attributes;
non terminal attribute_names;

start with operation;

/* Grammar */
operation ::= create_table SEMICOLON operation
               | insert_record SEMICOLON operation
               | create_table
               | insert_record
               |
             ;

insert_record ::= INSERT INTO ID attributes VALUES PARLEFT record_values PARRIGHT
                ; 

    attributes ::= PARLEFT attribute_names PARRIGHT
               |
                    ;

    attribute_names ::= ID COMA attribute_names
                    | ID                    
                    ;         

    record_values ::= NUM COMA record_values
                    | STR COMA record_values
                    | NUM
                    | STR
                    ;

create_table ::= CREATE TABLE ID PARLEFT table_attribute PARRIGHT 
                    ;

    table_attribute ::= ID attribute_type primary_key coma
                                        ;

        attribute_type ::= INT |
                        VARCHAR PARLEFT NUM PARRIGHT
                                           ;

        coma ::= COMA table_attribute|
                                 ;

        primary_key ::= PRIMARY KEY|
                                   ;